"""initial tables

Revision ID: 0cd1a5d99ebe
Revises: 
Create Date: 2024-05-01 03:23:24.859027

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '0cd1a5d99ebe'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'studios',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('address', sa.String(length=200), nullable=False),
        sa.Column('description', sa.String(length=500), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=100), nullable=False),
        sa.Column('email', sa.String(length=100), nullable=False),
        sa.Column('hashed_password', sa.String(length=200), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(
        op.f('ix_users_username'), 'users', ['username'], unique=False
    )
    op.create_table(
        'reviews',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('studio_id', sa.Integer(), nullable=False),
        sa.Column(
            'date',
            sa.DateTime(),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column('text', sa.String(length=500), nullable=False),
        sa.Column('grade', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['author_id'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(
            ['studio_id'],
            ['studios.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'rooms',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.String(length=500), nullable=False),
        sa.Column('studio_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['studio_id'],
            ['studios.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'slots',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('start_time', sa.DateTime(), nullable=False),
        sa.Column('end_time', sa.DateTime(), nullable=False),
        sa.Column('room_id', sa.Integer(), nullable=False),
        sa.Column('booked_by_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['booked_by_id'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(
            ['room_id'],
            ['rooms.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('slots')
    op.drop_table('rooms')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('studios')
    # ### end Alembic commands ###
